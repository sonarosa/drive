def levenshtein_distance(s1, s2):
  len1 = len(s1)
  len2 = len(s2)
  dp = [[0 for _ in range(len2 + 1)] for _ in range(len1 + 1)]
  for i in range(len1 + 1):
    dp[i][0] = i
  for j in range(len2 + 1):
    dp[0][j] = j
    for i in range(1, len1 + 1):
      dp[i][0]=i
    for j in range(1, len2 + 1):
      dp[0][j] = j
    for i in range(1, len1 + 1):
      for j in range(1, len2 + 1):
        if s1[i - 1] == s2[j -1]:
          dp[i][j]=dp[i-1][j-1]
        else:
          dp[i][j]=min(dp[i-1][j]+1,dp[i][j-1]+1,dp[i-1][j-1]+2)
  return dp[len1][len2]
  s1 = "intention"
  s2 = "execution"
  distance = levenshtein_distance(s1, s2)
  print(f"Levenshtein distance between '{s1}' and '{s2}': {distance}")
