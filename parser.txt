import nltk
from nltk import PCFG

# Define the probabilistic grammar using PCFG
grammar = PCFG.fromstring("""
    S -> NP VP [0.9]
    S -> VP [0.1] 
    NP -> Det N [0.7]
    NP -> N [0.3]
    VP -> V PP [0.6]
    VP -> V [0.4]
    PP -> Prep NP [0.8]
    PP -> Prep Det N [0.2]
    Det -> 'The' [0.9]
    Det -> 'the' [0.1]
    N -> 'cat' [0.8]
    N -> 'mat' [0.2]
    V -> 'sat' [1.0]
    Prep -> 'on' [1.0]
""")

# Create a parser using the PCFG
parser = nltk.ChartParser(grammar)

# Parse the sentence
sentence = ['The', 'cat', 'sat', 'on', 'the', 'mat']
for tree in parser.parse(sentence):
    tree.pretty_print()
import nltk
from nltk import CFG

# Define the grammar
grammar = CFG.fromstring("""
    S -> NP VP
    NP -> Det N
    VP -> V PP
    PP -> Prep NP
    Det -> 'The' | 'the'
    N -> 'cat' | 'mat'
    V -> 'sat'
    Prep -> 'on'
""")

# Create a parser
parser = nltk.ChartParser(grammar)

# Parse the sentence
sentence = ['The', 'cat', 'sat', 'on', 'the', 'mat']
for tree in parser.parse(sentence):
    tree.pretty_print()
